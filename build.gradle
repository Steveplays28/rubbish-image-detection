plugins {
    id "java" apply true
}

group = project.group
version = project.project_version

base {
    archivesName = project.project_id
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation("org.jetbrains:annotations:${jetbrains_annotations_version}")
    implementation("org.slf4j:slf4j-log4j12:${project.slf4j_log4j12_version}")
    implementation("org.openpnp:opencv:${project.opencv_version}")
    implementation("com.google.guava:guava:${project.guava_version}")
    implementation("org.apache.commons:commons-io:${project.commons_io_version}")
    implementation("commons-cli:commons-cli:${project.commons_cli_version}")
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archives_base_name}" }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude("META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA")

    from {
        configurations.compileClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    manifest {
        attributes("Name": project.project_name, "Main-Class": "${project.group}.${project.archives_base_name}.Main")
    }
}

test {
    useJUnitPlatform()
}
